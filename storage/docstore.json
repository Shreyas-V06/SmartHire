{"docstore/metadata": {"d5285693-6cd0-40ef-8193-9c295874d7b1": {"doc_hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea"}, "715ac361-7e3a-4982-9327-7d46fe537e4f": {"doc_hash": "a2c181a1a028d2617357658a7911b558d1a60157e0b9058066166e1bb6ffcafc", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "473c081c-72fb-462c-9ab1-74d6ddcd86df": {"doc_hash": "dad4e81e9036e4975fb82a6ce6bfe5505f815525fba43a8342a8b596084f0a76", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "9bbdf9e8-63e3-4ea3-b45d-760184a4aac9": {"doc_hash": "cc7c67acfdb745be7c7d50c04e24c27aac23c3889f0bc3e50021d6859f535ffe", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "2044e77a-ce2b-4ff0-b1ca-18df6352baed": {"doc_hash": "1845bcaa662e9cb0c6d951ca6dde9c7c32ff2f87e70d92fe0e8cf5d561629289", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "d2285938-b471-45bf-9ce1-acae00b2b68c": {"doc_hash": "853310056a8ddc728ae8f772cbd952431cacaa9bee498f7093ba6a8812599c0e", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "387487bc-7c8f-4114-adb4-688840f6f59f": {"doc_hash": "d344dd89540e888ff32c7e2749d82148337460f0f481423efc6c49347b42d350", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "8463c06d-c71d-4da9-95b6-244d2dbdbf6a": {"doc_hash": "1adee5cc79b02ecf7b0e6b689bfbfe72e7dc7b5553b404bc8680002f81657d2f", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "b852b7fb-84cf-467d-a171-8ec3fdc01314": {"doc_hash": "0093ab19c4d001776396abc5a5c109dcc1a3e68c9a1b342540edc2d05befb641", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "1644a34d-1a31-4bf2-8931-c249da7cb1bc": {"doc_hash": "4e761b9f8c814ad48df5dc7e717087f76b1c08b4649237ed424707f253ad604c", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "9f6d74c9-1921-44a5-a5df-04e0a05a35bd": {"doc_hash": "4c7e6b540d0fc0eebd65881ed454f005264c90aadc4b6997d3c7d96d0b78c840", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "4f7c94ea-65cf-431b-9aec-1365e8992c96": {"doc_hash": "6640b790bd081aae614ef3e79b9a4d7bb4ba4c143911e72130708545d16ec4b6", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "1599ee6f-e5cb-4b4d-a510-3f5b5b4c8813": {"doc_hash": "0ee5e33947db517dd10d1d98fcc66696f7583c8ff53b5e0e4373afbbd9cbac70", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "d1a69bd7-d587-49ef-9faf-4a3013281c8d": {"doc_hash": "0b14ebdb52c8790c129268cc0970b13a2381a10d42248edabae7d1cd6c8cac36", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "6071922e-6c29-493b-9267-02b561c3fe0b": {"doc_hash": "4be5348d4c75c48413b17d54236050efe067de141c3b9c51086bfe231347e177", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "3a1a83c6-7590-4f9e-8e98-a4fe51ba3674": {"doc_hash": "a35730c099d6967e9cd62c911caebcfdb6125df3135b85ce13b4b365bcbec89d", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}, "b7743165-427c-43cd-b64a-3ce04c89d9e6": {"doc_hash": "e30e4fb39113c2544f763cefeb620c5adb074983d92da564e131b5fcd83e52b0", "ref_doc_id": "d5285693-6cd0-40ef-8193-9c295874d7b1"}}, "docstore/data": {"715ac361-7e3a-4982-9327-7d46fe537e4f": {"__data__": {"id_": "715ac361-7e3a-4982-9327-7d46fe537e4f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "473c081c-72fb-462c-9ab1-74d6ddcd86df", "node_type": "1", "metadata": {}, "hash": "dad4e81e9036e4975fb82a6ce6bfe5505f815525fba43a8342a8b596084f0a76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Full Resume Text:\nNotsoMallu guy  \nnotsomalluguy @gmail.com  | github.com/ notsomalluguy  \n \nPersonal Information  \nName: Notsomallu guy  \nAge: 18 \nGender : Male  \n \nSkills  \nProgramming Languages:  Java , Python,", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 213, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "473c081c-72fb-462c-9ab1-74d6ddcd86df": {"__data__": {"id_": "473c081c-72fb-462c-9ab1-74d6ddcd86df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "715ac361-7e3a-4982-9327-7d46fe537e4f", "node_type": "1", "metadata": {}, "hash": "a2c181a1a028d2617357658a7911b558d1a60157e0b9058066166e1bb6ffcafc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bbdf9e8-63e3-4ea3-b45d-760184a4aac9", "node_type": "1", "metadata": {}, "hash": "cc7c67acfdb745be7c7d50c04e24c27aac23c3889f0bc3e50021d6859f535ffe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Python, C++  \nFrameworks/Technologies:  LlamaIndex , Langchain , Docker,  REST API  \nVersion Control:  Git, GitHub  \n \nExperience  \nAI Engineer Intern, CodeWorks Inc.", "mimetype": "text/plain", "start_char_idx": 206, "end_char_idx": 372, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9bbdf9e8-63e3-4ea3-b45d-760184a4aac9": {"__data__": {"id_": "9bbdf9e8-63e3-4ea3-b45d-760184a4aac9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "473c081c-72fb-462c-9ab1-74d6ddcd86df", "node_type": "1", "metadata": {}, "hash": "dad4e81e9036e4975fb82a6ce6bfe5505f815525fba43a8342a8b596084f0a76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2044e77a-ce2b-4ff0-b1ca-18df6352baed", "node_type": "1", "metadata": {}, "hash": "1845bcaa662e9cb0c6d951ca6dde9c7c32ff2f87e70d92fe0e8cf5d561629289", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "CodeWorks Inc. Summer 2023                                                                                                  Tenure: 2 years  \n\u2022 Built LLM -powered backend services  using FastAPI  and integrated Hugging Face models  for document analysis . \n\u2022 Optimized vector search retrieval  using FAISS  and LlamaIndex , improving semantic query performance .", "mimetype": "text/plain", "start_char_idx": null, "end_char_idx": null, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2044e77a-ce2b-4ff0-b1ca-18df6352baed": {"__data__": {"id_": "2044e77a-ce2b-4ff0-b1ca-18df6352baed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bbdf9e8-63e3-4ea3-b45d-760184a4aac9", "node_type": "1", "metadata": {}, "hash": "cc7c67acfdb745be7c7d50c04e24c27aac23c3889f0bc3e50021d6859f535ffe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2285938-b471-45bf-9ce1-acae00b2b68c", "node_type": "1", "metadata": {}, "hash": "853310056a8ddc728ae8f772cbd952431cacaa9bee498f7093ba6a8812599c0e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2022 Developed custom prompt engineering pipelines  for text summarization, classification, and entity extraction . \n\u2022 Integrated OpenAI, Gemini, and Mistral APIs  to enable context -aware responses  in web applications.", "mimetype": "text/plain", "start_char_idx": 723, "end_char_idx": 940, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d2285938-b471-45bf-9ce1-acae00b2b68c": {"__data__": {"id_": "d2285938-b471-45bf-9ce1-acae00b2b68c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2044e77a-ce2b-4ff0-b1ca-18df6352baed", "node_type": "1", "metadata": {}, "hash": "1845bcaa662e9cb0c6d951ca6dde9c7c32ff2f87e70d92fe0e8cf5d561629289", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "387487bc-7c8f-4114-adb4-688840f6f59f", "node_type": "1", "metadata": {}, "hash": "d344dd89540e888ff32c7e2749d82148337460f0f481423efc6c49347b42d350", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Projects  \nTransformer -Based PDF Summarization Tool  \n\u2022 Designed an efficient document summarization system  using LlamaIndex, Mistral -7B, and LangChain  for context -aware text \nextraction . \n\u2022 Optimized text chunking strategies  to improve semantic coherence  in generated summaries.", "mimetype": "text/plain", "start_char_idx": 945, "end_char_idx": 1232, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "387487bc-7c8f-4114-adb4-688840f6f59f": {"__data__": {"id_": "387487bc-7c8f-4114-adb4-688840f6f59f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2285938-b471-45bf-9ce1-acae00b2b68c", "node_type": "1", "metadata": {}, "hash": "853310056a8ddc728ae8f772cbd952431cacaa9bee498f7093ba6a8812599c0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8463c06d-c71d-4da9-95b6-244d2dbdbf6a", "node_type": "1", "metadata": {}, "hash": "1adee5cc79b02ecf7b0e6b689bfbfe72e7dc7b5553b404bc8680002f81657d2f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2022 Integrated with PyMuPDF  and Hugging Face models  to provide multi -format support  for PDF and DOCX files.  \nRAG -Powered Study Assistant  \n\u2022 Developed a document -based question -answering system  using FAISS, SentenceTransformers, and LlamaIndex  for semantic \nsearch .", "mimetype": "text/plain", "start_char_idx": 1235, "end_char_idx": 1509, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8463c06d-c71d-4da9-95b6-244d2dbdbf6a": {"__data__": {"id_": "8463c06d-c71d-4da9-95b6-244d2dbdbf6a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "387487bc-7c8f-4114-adb4-688840f6f59f", "node_type": "1", "metadata": {}, "hash": "d344dd89540e888ff32c7e2749d82148337460f0f481423efc6c49347b42d350", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b852b7fb-84cf-467d-a171-8ec3fdc01314", "node_type": "1", "metadata": {}, "hash": "0093ab19c4d001776396abc5a5c109dcc1a3e68c9a1b342540edc2d05befb641", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2022 Implemented retrieval -augmented generation (RAG)  to allow users to query large textbooks and research papers  efficiently.  \n\u2022 Built an interactive web UI with Streamlit , offering features like flashcard generation and concept mapping .", "mimetype": "text/plain", "start_char_idx": 1511, "end_char_idx": 1752, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b852b7fb-84cf-467d-a171-8ec3fdc01314": {"__data__": {"id_": "b852b7fb-84cf-467d-a171-8ec3fdc01314", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8463c06d-c71d-4da9-95b6-244d2dbdbf6a", "node_type": "1", "metadata": {}, "hash": "1adee5cc79b02ecf7b0e6b689bfbfe72e7dc7b5553b404bc8680002f81657d2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1644a34d-1a31-4bf2-8931-c249da7cb1bc", "node_type": "1", "metadata": {}, "hash": "4e761b9f8c814ad48df5dc7e717087f76b1c08b4649237ed424707f253ad604c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Automated Code Reviewer using Transformer Models  \n\u2022 Created an AI-powered static analysis tool  leveraging Code Llama and OpenAI\u2019s function calling  for code quality assessment . \n\u2022 Integrated with GitHub Actions  to enable automated pull request reviews  with suggestions on optimization and security \nflaws .", "mimetype": "text/plain", "start_char_idx": 1754, "end_char_idx": 2065, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1644a34d-1a31-4bf2-8931-c249da7cb1bc": {"__data__": {"id_": "1644a34d-1a31-4bf2-8931-c249da7cb1bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b852b7fb-84cf-467d-a171-8ec3fdc01314", "node_type": "1", "metadata": {}, "hash": "0093ab19c4d001776396abc5a5c109dcc1a3e68c9a1b342540edc2d05befb641", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f6d74c9-1921-44a5-a5df-04e0a05a35bd", "node_type": "1", "metadata": {}, "hash": "4c7e6b540d0fc0eebd65881ed454f005264c90aadc4b6997d3c7d96d0b78c840", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2022 Implemented AST-based analysis  to enhance LLM -generated recommendations  for language -specific best practices . \n \nEducation  \nCollege \u2013 BS in Computer Science at Northern Tech University                                                                                     --CGPA 8.75", "mimetype": "text/plain", "start_char_idx": 2067, "end_char_idx": 2355, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f6d74c9-1921-44a5-a5df-04e0a05a35bd": {"__data__": {"id_": "9f6d74c9-1921-44a5-a5df-04e0a05a35bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1644a34d-1a31-4bf2-8931-c249da7cb1bc", "node_type": "1", "metadata": {}, "hash": "4e761b9f8c814ad48df5dc7e717087f76b1c08b4649237ed424707f253ad604c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f7c94ea-65cf-431b-9aec-1365e8992c96", "node_type": "1", "metadata": {}, "hash": "6640b790bd081aae614ef3e79b9a4d7bb4ba4c143911e72130708545d16ec4b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Experience Section:\nAI Engineer Intern, CodeWorks Inc., Summer 2023                                                                                                  Tenure: 2 years\n\u2022 Built LLM -powered backend services  using FastAPI  and integrated Hugging Face models  for document analysis .\n\u2022 Optimized vector search retrieval  using FAISS  and LlamaIndex , improving semantic query performance .", "mimetype": "text/plain", "start_char_idx": 2362, "end_char_idx": 2762, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f7c94ea-65cf-431b-9aec-1365e8992c96": {"__data__": {"id_": "4f7c94ea-65cf-431b-9aec-1365e8992c96", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f6d74c9-1921-44a5-a5df-04e0a05a35bd", "node_type": "1", "metadata": {}, "hash": "4c7e6b540d0fc0eebd65881ed454f005264c90aadc4b6997d3c7d96d0b78c840", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1599ee6f-e5cb-4b4d-a510-3f5b5b4c8813", "node_type": "1", "metadata": {}, "hash": "0ee5e33947db517dd10d1d98fcc66696f7583c8ff53b5e0e4373afbbd9cbac70", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2022 Developed custom prompt engineering pipelines  for text summarization, classification, and entity extraction .\n\u2022 Integrated OpenAI, Gemini, and Mistral APIs  to enable context -aware responses  in web applications.", "mimetype": "text/plain", "start_char_idx": 2763, "end_char_idx": 2979, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1599ee6f-e5cb-4b4d-a510-3f5b5b4c8813": {"__data__": {"id_": "1599ee6f-e5cb-4b4d-a510-3f5b5b4c8813", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f7c94ea-65cf-431b-9aec-1365e8992c96", "node_type": "1", "metadata": {}, "hash": "6640b790bd081aae614ef3e79b9a4d7bb4ba4c143911e72130708545d16ec4b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1a69bd7-d587-49ef-9faf-4a3013281c8d", "node_type": "1", "metadata": {}, "hash": "0b14ebdb52c8790c129268cc0970b13a2381a10d42248edabae7d1cd6c8cac36", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Projects\nTransformer -Based PDF Summarization Tool\n\u2022 Designed an efficient document summarization system  using LlamaIndex, Mistral -7B, and LangChain  for context -aware text\nextraction .\n\u2022 Optimized text chunking strategies  to improve semantic coherence  in generated summaries.", "mimetype": "text/plain", "start_char_idx": 2981, "end_char_idx": 3262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d1a69bd7-d587-49ef-9faf-4a3013281c8d": {"__data__": {"id_": "d1a69bd7-d587-49ef-9faf-4a3013281c8d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1599ee6f-e5cb-4b4d-a510-3f5b5b4c8813", "node_type": "1", "metadata": {}, "hash": "0ee5e33947db517dd10d1d98fcc66696f7583c8ff53b5e0e4373afbbd9cbac70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6071922e-6c29-493b-9267-02b561c3fe0b", "node_type": "1", "metadata": {}, "hash": "4be5348d4c75c48413b17d54236050efe067de141c3b9c51086bfe231347e177", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2022 Integrated with PyMuPDF  and Hugging Face models  to provide multi -format support  for PDF and DOCX files.\nRAG -Powered Study Assistant\n\u2022 Developed a document -based question -answering system  using FAISS, SentenceTransformers, and LlamaIndex  for semantic\nsearch .", "mimetype": "text/plain", "start_char_idx": 3263, "end_char_idx": 3532, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6071922e-6c29-493b-9267-02b561c3fe0b": {"__data__": {"id_": "6071922e-6c29-493b-9267-02b561c3fe0b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1a69bd7-d587-49ef-9faf-4a3013281c8d", "node_type": "1", "metadata": {}, "hash": "0b14ebdb52c8790c129268cc0970b13a2381a10d42248edabae7d1cd6c8cac36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a1a83c6-7590-4f9e-8e98-a4fe51ba3674", "node_type": "1", "metadata": {}, "hash": "a35730c099d6967e9cd62c911caebcfdb6125df3135b85ce13b4b365bcbec89d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2022 Implemented retrieval -augmented generation (RAG)  to allow users to query large textbooks and research papers  efficiently.\n\u2022 Built an interactive web UI with Streamlit , offering features like flashcard generation and concept mapping .", "mimetype": "text/plain", "start_char_idx": 3533, "end_char_idx": 3772, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3a1a83c6-7590-4f9e-8e98-a4fe51ba3674": {"__data__": {"id_": "3a1a83c6-7590-4f9e-8e98-a4fe51ba3674", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6071922e-6c29-493b-9267-02b561c3fe0b", "node_type": "1", "metadata": {}, "hash": "4be5348d4c75c48413b17d54236050efe067de141c3b9c51086bfe231347e177", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7743165-427c-43cd-b64a-3ce04c89d9e6", "node_type": "1", "metadata": {}, "hash": "e30e4fb39113c2544f763cefeb620c5adb074983d92da564e131b5fcd83e52b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Automated Code Reviewer using Transformer Models\n\u2022 Created an AI-powered static analysis tool  leveraging Code Llama and OpenAI\u2019s function calling  for code quality assessment .\n\u2022 Integrated with GitHub Actions  to enable automated pull request reviews  with suggestions on optimization and security\nflaws .", "mimetype": "text/plain", "start_char_idx": 3773, "end_char_idx": 4080, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b7743165-427c-43cd-b64a-3ce04c89d9e6": {"__data__": {"id_": "b7743165-427c-43cd-b64a-3ce04c89d9e6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5285693-6cd0-40ef-8193-9c295874d7b1", "node_type": "4", "metadata": {}, "hash": "4111b3e40fc57c0d9db68196893b1ac845eff660a5fe86d12d3cf9390a9720ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a1a83c6-7590-4f9e-8e98-a4fe51ba3674", "node_type": "1", "metadata": {}, "hash": "a35730c099d6967e9cd62c911caebcfdb6125df3135b85ce13b4b365bcbec89d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2022 Implemented AST-based analysis  to enhance LLM -generated recommendations  for language -specific best practices .\n\nEducation Section:\nCollege \u2013 BS in Computer Science at Northern Tech University                                                                                     --CGPA 8.75\n\nSkills Section:\nProgramming Languages:  Java , Python, C++\nVersion Control:  Git, GitHub", "mimetype": "text/plain", "start_char_idx": 4081, "end_char_idx": 4464, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"d5285693-6cd0-40ef-8193-9c295874d7b1": {"node_ids": ["715ac361-7e3a-4982-9327-7d46fe537e4f", "473c081c-72fb-462c-9ab1-74d6ddcd86df", "9bbdf9e8-63e3-4ea3-b45d-760184a4aac9", "2044e77a-ce2b-4ff0-b1ca-18df6352baed", "d2285938-b471-45bf-9ce1-acae00b2b68c", "387487bc-7c8f-4114-adb4-688840f6f59f", "8463c06d-c71d-4da9-95b6-244d2dbdbf6a", "b852b7fb-84cf-467d-a171-8ec3fdc01314", "1644a34d-1a31-4bf2-8931-c249da7cb1bc", "9f6d74c9-1921-44a5-a5df-04e0a05a35bd", "4f7c94ea-65cf-431b-9aec-1365e8992c96", "1599ee6f-e5cb-4b4d-a510-3f5b5b4c8813", "d1a69bd7-d587-49ef-9faf-4a3013281c8d", "6071922e-6c29-493b-9267-02b561c3fe0b", "3a1a83c6-7590-4f9e-8e98-a4fe51ba3674", "b7743165-427c-43cd-b64a-3ce04c89d9e6"], "metadata": {}}}}